<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pihole on reticulating splines</title><link>https://sbarbett.github.io/reticulating-splines/tags/pihole/</link><description>Recent content in Pihole on reticulating splines</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sat, 22 Feb 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://sbarbett.github.io/reticulating-splines/tags/pihole/index.xml" rel="self" type="application/rss+xml"/><item><title>Playing With My PiHoles</title><link>https://sbarbett.github.io/reticulating-splines/posts/playing-with-my-piholes/</link><pubDate>Sat, 22 Feb 2025 00:00:00 +0000</pubDate><guid>https://sbarbett.github.io/reticulating-splines/posts/playing-with-my-piholes/</guid><description>&lt;h1 id="playing-with-my-piholes">Playing With My PiHoles&lt;/h1>
&lt;p>Last weekend, the PiHole team dropped a major update – PiHole v6. This version completely re-architects the project. They’ve updated the web server, overhauled the APIs and interface, and added a few new features. It looks pretty solid on paper, but I’m not ready to roll it out on my production Raspberry Pis until I’m sure all the kinks are worked out. From what I’m seeing on Reddit, there’s still plenty to fix. That won’t stop me from tinkering, though.&lt;/p></description></item><item><title>Deploying an OCI Pi-hole with Terraform</title><link>https://sbarbett.github.io/reticulating-splines/posts/terraform-oci-pihole/</link><pubDate>Sun, 02 Feb 2025 00:00:00 +0000</pubDate><guid>https://sbarbett.github.io/reticulating-splines/posts/terraform-oci-pihole/</guid><description>&lt;h1 id="deploying-an-oci-pi-hole-with-terraform">Deploying an OCI Pi-hole with Terraform&lt;/h1>
&lt;p>The other day, I wrote about deploying a Pi-hole on an Oracle Cloud VM alongside Unbound and WireGuard. In that post, I explained how to set everything up manually through the web interface and CLI. This time, I wanted to automate the deployment using a shell script and OCI&amp;rsquo;s Terraform module.&lt;/p>
&lt;h2 id="terraform">Terraform&lt;/h2>
&lt;p>Terraform is an infrastructure-as-code tool that lets you define and provision infrastructure through configuration files. Instead of manually setting up resources, you can describe them in a script, and Terraform will handle the provisioning.&lt;/p></description></item><item><title>Setting Up a Pi-hole with WireGuard on an Always Free Oracle Cloud VM</title><link>https://sbarbett.github.io/reticulating-splines/posts/oracle-cloud-unbound-pihole/</link><pubDate>Thu, 30 Jan 2025 00:00:00 +0000</pubDate><guid>https://sbarbett.github.io/reticulating-splines/posts/oracle-cloud-unbound-pihole/</guid><description>&lt;h1 id="setting-up-a-pihole-with-wireguard-on-an-always-free-oracle-cloud-vm">Setting Up a Pihole with Wireguard on an Always Free Oracle Cloud VM&lt;/h1>
&lt;p>About a week ago, I discovered that Oracle Cloud offers a free tier of virtual machines—not in the AWS &amp;ldquo;free for a year&amp;rdquo; sense, but free indefinitely (allegedly). The x86 instances come with 1GB of RAM and 1 vCPU, which isn’t much, but it’s enough for some basic workloads. I like to think of it as a Raspberry Pi Zero in the cloud.&lt;/p></description></item></channel></rss>