<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Terraform on reticulating splines</title><link>https://sbarbett.github.io/reticulating-splines/tags/terraform/</link><description>Recent content in Terraform on reticulating splines</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sun, 02 Feb 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://sbarbett.github.io/reticulating-splines/tags/terraform/index.xml" rel="self" type="application/rss+xml"/><item><title>Deploying an OCI Pi-hole with Terraform</title><link>https://sbarbett.github.io/reticulating-splines/posts/terraform-oci-pihole/</link><pubDate>Sun, 02 Feb 2025 00:00:00 +0000</pubDate><guid>https://sbarbett.github.io/reticulating-splines/posts/terraform-oci-pihole/</guid><description>&lt;h1 id="deploying-an-oci-pi-hole-with-terraform">Deploying an OCI Pi-hole with Terraform&lt;/h1>
&lt;p>The other day, I wrote about deploying a Pi-hole on an Oracle Cloud VM alongside Unbound and WireGuard. In that post, I explained how to set everything up manually through the web interface and CLI. This time, I wanted to automate the deployment using a shell script and OCI&amp;rsquo;s Terraform module.&lt;/p>
&lt;h2 id="terraform">Terraform&lt;/h2>
&lt;p>Terraform is an infrastructure-as-code tool that lets you define and provision infrastructure through configuration files. Instead of manually setting up resources, you can describe them in a script, and Terraform will handle the provisioning.&lt;/p></description></item></channel></rss>